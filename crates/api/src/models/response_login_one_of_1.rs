/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.6.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ResponseLoginOneOf1 {
    #[serde(rename = "result")]
    pub result: Result,
    #[serde(rename = "ticket")]
    pub ticket: String,
    #[serde(rename = "allowed_methods")]
    pub allowed_methods: Vec<crate::models::MfaMethod>,
}

impl ResponseLoginOneOf1 {
    pub fn new(result: Result, ticket: String, allowed_methods: Vec<crate::models::MfaMethod>) -> ResponseLoginOneOf1 {
        ResponseLoginOneOf1 {
            result,
            ticket,
            allowed_methods,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Result {
    #[serde(rename = "MFA")]
    Mfa,
}

impl Default for Result {
    fn default() -> Result {
        Self::Mfa
    }
}

