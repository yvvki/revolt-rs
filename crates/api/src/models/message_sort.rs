/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.5.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */

/// MessageSort : Sort used for retrieving messages

/// Sort used for retrieving messages
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MessageSort {
    #[serde(rename = "Relevance")]
    Relevance,
    #[serde(rename = "Latest")]
    Latest,
    #[serde(rename = "Oldest")]
    Oldest,

}

impl ToString for MessageSort {
    fn to_string(&self) -> String {
        match self {
            Self::Relevance => String::from("Relevance"),
            Self::Latest => String::from("Latest"),
            Self::Oldest => String::from("Oldest"),
        }
    }
}

impl Default for MessageSort {
    fn default() -> MessageSort {
        Self::Relevance
    }
}




