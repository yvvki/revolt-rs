/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.5.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ChannelType {
    #[serde(rename = "Text")]
    Text,
    #[serde(rename = "Voice")]
    Voice,

}

impl ToString for ChannelType {
    fn to_string(&self) -> String {
        match self {
            Self::Text => String::from("Text"),
            Self::Voice => String::from("Voice"),
        }
    }
}

impl Default for ChannelType {
    fn default() -> ChannelType {
        Self::Text
    }
}




