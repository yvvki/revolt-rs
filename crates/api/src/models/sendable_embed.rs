/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.5.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */

/// SendableEmbed : Representation of a text embed before it is sent.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SendableEmbed {
    #[serde(rename = "icon_url", skip_serializing_if = "Option::is_none")]
    pub icon_url: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "media", skip_serializing_if = "Option::is_none")]
    pub media: Option<String>,
    #[serde(rename = "colour", skip_serializing_if = "Option::is_none")]
    pub colour: Option<String>,
}

impl SendableEmbed {
    /// Representation of a text embed before it is sent.
    pub fn new() -> SendableEmbed {
        SendableEmbed {
            icon_url: None,
            url: None,
            title: None,
            description: None,
            media: None,
            colour: None,
        }
    }
}


