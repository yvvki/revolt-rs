/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.6.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ErrorOneOf1OneOf39 {
    #[serde(rename = "type")]
    pub r#type: RHashType,
    #[serde(rename = "operation")]
    pub operation: String,
    #[serde(rename = "collection")]
    pub collection: String,
}

impl ErrorOneOf1OneOf39 {
    pub fn new(r#type: RHashType, operation: String, collection: String) -> ErrorOneOf1OneOf39 {
        ErrorOneOf1OneOf39 {
            r#type,
            operation,
            collection,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "DatabaseError")]
    DatabaseError,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::DatabaseError
    }
}

