/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.5.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */

/// FieldsUser : Optional fields on user object

/// Optional fields on user object
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FieldsUser {
    #[serde(rename = "Avatar")]
    Avatar,
    #[serde(rename = "StatusText")]
    StatusText,
    #[serde(rename = "StatusPresence")]
    StatusPresence,
    #[serde(rename = "ProfileContent")]
    ProfileContent,
    #[serde(rename = "ProfileBackground")]
    ProfileBackground,

}

impl ToString for FieldsUser {
    fn to_string(&self) -> String {
        match self {
            Self::Avatar => String::from("Avatar"),
            Self::StatusText => String::from("StatusText"),
            Self::StatusPresence => String::from("StatusPresence"),
            Self::ProfileContent => String::from("ProfileContent"),
            Self::ProfileBackground => String::from("ProfileBackground"),
        }
    }
}

impl Default for FieldsUser {
    fn default() -> FieldsUser {
        Self::Avatar
    }
}




