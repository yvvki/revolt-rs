/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.5.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DataEditRole {
    /// Role name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Role colour
    #[serde(rename = "colour", skip_serializing_if = "Option::is_none")]
    pub colour: Option<String>,
    /// Whether this role should be displayed separately
    #[serde(rename = "hoist", skip_serializing_if = "Option::is_none")]
    pub hoist: Option<bool>,
    /// Ranking position  Smaller values take priority.
    #[serde(rename = "rank", skip_serializing_if = "Option::is_none")]
    pub rank: Option<i64>,
    /// Fields to remove from role object
    #[serde(rename = "remove", skip_serializing_if = "Option::is_none")]
    pub remove: Option<Vec<crate::models::FieldsRole>>,
}

impl DataEditRole {
    pub fn new() -> DataEditRole {
        DataEditRole {
            name: None,
            colour: None,
            hoist: None,
            rank: None,
            remove: None,
        }
    }
}


