/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.5.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */

/// NewRoleResponseRole : New role



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct NewRoleResponseRole {
    /// Role name
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "permissions")]
    pub permissions: Box<crate::models::RolePermissions>,
    /// Colour used for this role  This can be any valid CSS colour
    #[serde(rename = "colour", skip_serializing_if = "Option::is_none")]
    pub colour: Option<String>,
    /// Whether this role should be shown separately on the member sidebar
    #[serde(rename = "hoist", skip_serializing_if = "Option::is_none")]
    pub hoist: Option<bool>,
    /// Ranking of this role
    #[serde(rename = "rank", skip_serializing_if = "Option::is_none")]
    pub rank: Option<i64>,
}

impl NewRoleResponseRole {
    /// New role
    pub fn new(name: String, permissions: crate::models::RolePermissions) -> NewRoleResponseRole {
        NewRoleResponseRole {
            name,
            permissions: Box::new(permissions),
            colour: None,
            hoist: None,
            rank: None,
        }
    }
}


