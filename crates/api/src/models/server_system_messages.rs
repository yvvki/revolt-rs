/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.6.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */

/// ServerSystemMessages : Configuration for sending system event messages



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ServerSystemMessages {
    /// ID of channel to send user join messages in
    #[serde(rename = "user_joined", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub user_joined: Option<Option<String>>,
    /// ID of channel to send user left messages in
    #[serde(rename = "user_left", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub user_left: Option<Option<String>>,
    /// ID of channel to send user kicked messages in
    #[serde(rename = "user_kicked", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub user_kicked: Option<Option<String>>,
    /// ID of channel to send user banned messages in
    #[serde(rename = "user_banned", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub user_banned: Option<Option<String>>,
}

impl ServerSystemMessages {
    /// Configuration for sending system event messages
    pub fn new() -> ServerSystemMessages {
        ServerSystemMessages {
            user_joined: None,
            user_left: None,
            user_kicked: None,
            user_banned: None,
        }
    }
}


