/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.5.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DataLoginAnyOf1 {
    /// Unvalidated MFA ticket  Used to resolve the correct account
    #[serde(rename = "mfa_ticket")]
    pub mfa_ticket: String,
    /// Valid MFA response  This will take precedence over the `password` field where applicable
    #[serde(rename = "mfa_response")]
    pub mfa_response: Box<crate::models::MfaResponse>,
    /// Friendly name used for the session
    #[serde(rename = "friendly_name", skip_serializing_if = "Option::is_none")]
    pub friendly_name: Option<String>,
}

impl DataLoginAnyOf1 {
    pub fn new(mfa_ticket: String, mfa_response: crate::models::MfaResponse) -> DataLoginAnyOf1 {
        DataLoginAnyOf1 {
            mfa_ticket,
            mfa_response: Box::new(mfa_response),
            friendly_name: None,
        }
    }
}


