/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.5.5
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DataLoginAnyOf {
    /// Email
    #[serde(rename = "email")]
    pub email: String,
    /// Password
    #[serde(rename = "password")]
    pub password: String,
    /// Captcha verification code
    #[serde(rename = "captcha", skip_serializing_if = "Option::is_none")]
    pub captcha: Option<String>,
    /// Friendly name used for the session
    #[serde(rename = "friendly_name", skip_serializing_if = "Option::is_none")]
    pub friendly_name: Option<String>,
}

impl DataLoginAnyOf {
    pub fn new(email: String, password: String) -> DataLoginAnyOf {
        DataLoginAnyOf {
            email,
            password,
            captcha: None,
            friendly_name: None,
        }
    }
}


